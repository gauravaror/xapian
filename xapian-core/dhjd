diff --git a/xapian-core/api/omdatabase.cc b/xapian-core/api/omdatabase.cc
index beb6882..8355442 100644
--- a/xapian-core/api/omdatabase.cc
+++ b/xapian-core/api/omdatabase.cc
@@ -433,6 +433,22 @@ Database::get_doclength(Xapian::docid did) const
     RETURN(internal[n]->get_doclength(m));
 }
 
+Xapian::termcount
+Database::get_nouniqterm(Xapian::docid did) const
+{
+	LOGCALL(API,Xapian::termcount,"Database::get_nouniqterm",did);
+	if(did == 0)
+	docid_zero_invalid();
+	
+	unsigned int multiplier = internal.size();
+	if(rare(multiplier == 0))
+	no_subdatabases();
+	Xapian::doccount n = (did - 1) % multiplier; // which actual database
+	Xapian::docid m = (did - 1) / multiplier + 1; //real docid in database
+	RETURN(internal[n]->get_nouniqterm(m));
+}
+
+
 Document
 Database::get_document(Xapian::docid did) const
 {
diff --git a/xapian-core/api/postlist.h b/xapian-core/api/postlist.h
index 0c7ca1f..020dbb4 100644
--- a/xapian-core/api/postlist.h
+++ b/xapian-core/api/postlist.h
@@ -82,6 +82,8 @@ class Xapian::PostingIterator::Internal : public Xapian::Internal::intrusive_bas
     /* FIXME: Once flint has been retired, we should probably strip out
      * PostList::get_doclength() and just fetch it from the DB directly.
      */
+	///Return the no of uniq term in current document.
+	virtual Xapian::termcount get_nouniqterm() const = 0;	
 
     /** Return the wdf for the document at the current position.
      *
diff --git a/xapian-core/backends/brass/brass_database.cc b/xapian-core/backends/brass/brass_database.cc
index 28335ea..289471c 100644
--- a/xapian-core/backends/brass/brass_database.cc
+++ b/xapian-core/backends/brass/brass_database.cc
@@ -813,6 +813,17 @@ BrassDatabase::get_doclength(Xapian::docid did) const
     Assert(did != 0);
     intrusive_ptr<const BrassDatabase> ptrtothis(this);
     RETURN(postlist_table.get_doclength(did, ptrtothis));
+	
+}
+
+Xapian::termcount
+BrassDatabase::get_nouniqterm(Xapian::docid did) const
+{
+    LOGCALL(DB, Xapian::termcount, "BrassDatabase::get_nouniqterm", did);
+    Assert(did != 0);
+	intrusive_ptr<const BrassDatabase> ptrtothis(this);
+	BrassTermList termlist(ptrtothis, did);
+	RETURN(termlist.get_approx_size());
 }
 
 Xapian::doccount
@@ -1423,6 +1434,13 @@ BrassWritableDatabase::get_doclength(Xapian::docid did) const
     RETURN(BrassDatabase::get_doclength(did));
 }
 
+Xapian::termcount
+BrassWritableDatabase::get_nouniqterm(Xapian::docid did) const
+{
+	LOGCALL(DB,Xapian::termcount,"BrassWritableDatabase::get_nouniqterm",did);
+    RETURN(BrassDatabase::get_nouniqterm(did));
+}
+
 Xapian::doccount
 BrassWritableDatabase::get_termfreq(const string & term) const
 {
diff --git a/xapian-core/backends/brass/brass_database.h b/xapian-core/backends/brass/brass_database.h
index 450f62b..7379702 100644
--- a/xapian-core/backends/brass/brass_database.h
+++ b/xapian-core/backends/brass/brass_database.h
@@ -258,6 +258,7 @@ class BrassDatabase : public Xapian::Database::Internal {
 	totlen_t get_total_length() const;
 	Xapian::doclength get_avlength() const;
 	Xapian::termcount get_doclength(Xapian::docid did) const;
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 	Xapian::doccount get_termfreq(const string & tname) const;
 	Xapian::termcount get_collection_freq(const string & tname) const;
 	Xapian::doccount get_value_freq(Xapian::valueno slot) const;
@@ -379,6 +380,7 @@ class BrassWritableDatabase : public BrassDatabase {
 	/** Virtual methods of Database::Internal. */
 	//@{
 	Xapian::termcount get_doclength(Xapian::docid did) const;
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 	Xapian::doccount get_termfreq(const string & tname) const;
 	Xapian::termcount get_collection_freq(const string & tname) const;
 	Xapian::doccount get_value_freq(Xapian::valueno slot) const;
diff --git a/xapian-core/backends/brass/brass_postlist.cc b/xapian-core/backends/brass/brass_postlist.cc
index a20b440..7678384 100644
--- a/xapian-core/backends/brass/brass_postlist.cc
+++ b/xapian-core/backends/brass/brass_postlist.cc
@@ -721,6 +721,15 @@ BrassPostList::get_doclength() const
     RETURN(this_db->get_doclength(did));
 }
 
+Xapian::termcount
+BrassPostList::get_nouniqterm() const
+{
+    LOGCALL(DB, Xapian::termcount, "BrassPostList::get_nouniqterm", NO_ARGS);
+    Assert(have_started);
+    Assert(this_db.get());
+    RETURN(this_db->get_nouniqterm(did));
+}
+
 bool
 BrassPostList::next_in_chunk()
 {
diff --git a/xapian-core/backends/brass/brass_postlist.h b/xapian-core/backends/brass/brass_postlist.h
index efd5268..ea7fe86 100644
--- a/xapian-core/backends/brass/brass_postlist.h
+++ b/xapian-core/backends/brass/brass_postlist.h
@@ -116,6 +116,7 @@ class BrassPostListTable : public BrassTable {
 	/** Returns the length of document @a did. */
 	Xapian::termcount get_doclength(Xapian::docid did,
 					Xapian::Internal::intrusive_ptr<const BrassDatabase> db) const;
+	
 
 	/** Check if document @a did exists. */
 	bool document_exists(Xapian::docid did,
@@ -247,6 +248,9 @@ class BrassPostList : public LeafPostList {
 	/// Returns the length of current document.
 	Xapian::termcount get_doclength() const;
 
+	/// Returns the no of uniq term in the current document.
+	Xapian::termcount get_nouniqterm() const;
+
 	/** Returns the Within Document Frequency of the term in the current
 	 *  document.
 	 */
diff --git a/xapian-core/backends/chert/chert_alldocspostlist.cc b/xapian-core/backends/chert/chert_alldocspostlist.cc
index ad2dc99..7d66138 100644
--- a/xapian-core/backends/chert/chert_alldocspostlist.cc
+++ b/xapian-core/backends/chert/chert_alldocspostlist.cc
@@ -56,6 +56,11 @@ ChertAllDocsPostList::get_doclength() const
 }
 
 Xapian::termcount
+ChertAllDocsPostList::get_nouniqterm() const
+{
+	throw Xapian::UnimplementedError("Functionget_nouniqterm is not implemented for chert");
+}
+Xapian::termcount
 ChertAllDocsPostList::get_wdf() const
 {
     LOGCALL(DB, Xapian::termcount, "ChertAllDocsPostList::get_wdf", NO_ARGS);
diff --git a/xapian-core/backends/chert/chert_alldocspostlist.h b/xapian-core/backends/chert/chert_alldocspostlist.h
index bb2aaaa..e043c95 100644
--- a/xapian-core/backends/chert/chert_alldocspostlist.h
+++ b/xapian-core/backends/chert/chert_alldocspostlist.h
@@ -43,6 +43,8 @@ class ChertAllDocsPostList : public ChertPostList {
     Xapian::doccount get_termfreq() const;
 
     Xapian::termcount get_doclength() const;
+    
+	Xapian::termcount get_nouniqterm() const;
 
     Xapian::termcount get_wdf() const;
 
diff --git a/xapian-core/backends/chert/chert_database.cc b/xapian-core/backends/chert/chert_database.cc
index f9ccb33..ba6c4d3 100644
--- a/xapian-core/backends/chert/chert_database.cc
+++ b/xapian-core/backends/chert/chert_database.cc
@@ -795,6 +795,15 @@ ChertDatabase::get_doclength(Xapian::docid did) const
     RETURN(postlist_table.get_doclength(did, ptrtothis));
 }
 
+Xapian::termcount
+ChertDatabase::get_nouniqterm(Xapian::docid did) const
+{
+    LOGCALL(DB, Xapian::termcount, "ChertDatabase::get_nouniqterm", did);
+    Assert(did != 0);
+    intrusive_ptr<const ChertDatabase> ptrtothis(this);
+    RETURN(postlist_table.get_doclength(did, ptrtothis));//Pending implementation
+}
+
 Xapian::doccount
 ChertDatabase::get_termfreq(const string & term) const
 {
@@ -1485,6 +1494,13 @@ ChertWritableDatabase::get_doclength(Xapian::docid did) const
     RETURN(ChertDatabase::get_doclength(did));
 }
 
+Xapian::termcount
+ChertWritableDatabase::get_nouniqterm(Xapian::docid did) const
+{
+    LOGCALL(DB, Xapian::termcount, "ChertWritableDatabase::get_nouniqterm", did);
+    RETURN(ChertDatabase::get_doclength(did));
+}
+
 Xapian::doccount
 ChertWritableDatabase::get_termfreq(const string & tname) const
 {
diff --git a/xapian-core/backends/chert/chert_database.h b/xapian-core/backends/chert/chert_database.h
index f801d05..fd8d16f 100644
--- a/xapian-core/backends/chert/chert_database.h
+++ b/xapian-core/backends/chert/chert_database.h
@@ -256,6 +256,7 @@ class ChertDatabase : public Xapian::Database::Internal {
 	totlen_t get_total_length() const;
 	Xapian::doclength get_avlength() const;
 	Xapian::termcount get_doclength(Xapian::docid did) const;
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 	Xapian::doccount get_termfreq(const string & tname) const;
 	Xapian::termcount get_collection_freq(const string & tname) const;
 	Xapian::doccount get_value_freq(Xapian::valueno slot) const;
@@ -422,6 +423,7 @@ class ChertWritableDatabase : public ChertDatabase {
 	/** Virtual methods of Database::Internal. */
 	//@{
 	Xapian::termcount get_doclength(Xapian::docid did) const;
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 	Xapian::doccount get_termfreq(const string & tname) const;
 	Xapian::termcount get_collection_freq(const string & tname) const;
 	Xapian::doccount get_value_freq(Xapian::valueno slot) const;
diff --git a/xapian-core/backends/chert/chert_postlist.cc b/xapian-core/backends/chert/chert_postlist.cc
index 987255b..5355413 100644
--- a/xapian-core/backends/chert/chert_postlist.cc
+++ b/xapian-core/backends/chert/chert_postlist.cc
@@ -721,6 +721,15 @@ ChertPostList::get_doclength() const
     RETURN(this_db->get_doclength(did));
 }
 
+Xapian::termcount
+ChertPostList::get_nouniqterm() const
+{
+    LOGCALL(DB, Xapian::termcount, "ChertPostList::get_nouniqterm", NO_ARGS);
+    Assert(have_started);
+    Assert(this_db.get());
+    RETURN(this_db->get_nouniqterm(did));
+}
+
 bool
 ChertPostList::next_in_chunk()
 {
diff --git a/xapian-core/backends/chert/chert_postlist.h b/xapian-core/backends/chert/chert_postlist.h
index 534fe3a..8e90f0e 100644
--- a/xapian-core/backends/chert/chert_postlist.h
+++ b/xapian-core/backends/chert/chert_postlist.h
@@ -115,6 +115,9 @@ class ChertPostListTable : public ChertTable {
 	/** Returns the length of document @a did. */
 	Xapian::termcount get_doclength(Xapian::docid did,
 					Xapian::Internal::intrusive_ptr<const ChertDatabase> db) const;
+	
+	Xapian::termcount get_nouniqterm(Xapian::docid did,
+					Xapian::Internal::intrusive_ptr<const ChertDatabase> db) const;
 
 	/** Check if document @a did exists. */
 	bool document_exists(Xapian::docid did,
@@ -245,6 +248,8 @@ class ChertPostList : public LeafPostList {
 
 	/// Returns the length of current document.
 	Xapian::termcount get_doclength() const;
+	
+	Xapian::termcount get_nouniqterm() const;
 
 	/** Returns the Within Document Frequency of the term in the current
 	 *  document.
diff --git a/xapian-core/backends/contiguousalldocspostlist.cc b/xapian-core/backends/contiguousalldocspostlist.cc
index 1bca70f..8b436d4 100644
--- a/xapian-core/backends/contiguousalldocspostlist.cc
+++ b/xapian-core/backends/contiguousalldocspostlist.cc
@@ -52,6 +52,14 @@ ContiguousAllDocsPostList::get_doclength() const
 }
 
 Xapian::termcount
+ContiguousAllDocsPostList::get_nouniqterm() const
+{
+    Assert(did != 0);
+    Assert(!at_end());
+    return db->get_nouniqterm(did);
+}
+
+Xapian::termcount
 ContiguousAllDocsPostList::get_wdf() const
 {
     Assert(did != 0);
diff --git a/xapian-core/backends/contiguousalldocspostlist.h b/xapian-core/backends/contiguousalldocspostlist.h
index ee13133..7f3ed5b 100644
--- a/xapian-core/backends/contiguousalldocspostlist.h
+++ b/xapian-core/backends/contiguousalldocspostlist.h
@@ -63,6 +63,9 @@ class ContiguousAllDocsPostList : public LeafPostList {
 
     /// Return the length of current document.
     Xapian::termcount get_doclength() const;
+    
+	/// Return the number of unique terms.
+    Xapian::termcount get_nouniqterm() const;
 
     /// Always return 1 (wdf isn't totally meaningful for us).
     Xapian::termcount get_wdf() const;
diff --git a/xapian-core/backends/database.h b/xapian-core/backends/database.h
index 3d95921..4e80e60 100644
--- a/xapian-core/backends/database.h
+++ b/xapian-core/backends/database.h
@@ -141,6 +141,15 @@ class Database::Internal : public Xapian::Internal::intrusive_base {
 	 *              being requested.
 	 */
 	virtual Xapian::termcount get_doclength(Xapian::docid did) const = 0;
+	
+	
+	/** Get the number of unique term in document.
+	 *
+	 
+	 *  @param did  The document id of the document whose number of terms is
+	 *              being requested.
+	 */
+	virtual	Xapian::termcount get_nouniqterm(Xapian::docid did) const = 0;
 
 	/** Return the number of documents indexed by a given term.  This
 	 *  may be an approximation, but must be an upper bound (ie,
diff --git a/xapian-core/backends/inmemory/inmemory_database.cc b/xapian-core/backends/inmemory/inmemory_database.cc
index 446fe41..a88a360 100644
--- a/xapian-core/backends/inmemory/inmemory_database.cc
+++ b/xapian-core/backends/inmemory/inmemory_database.cc
@@ -157,6 +157,13 @@ InMemoryPostList::get_doclength() const
     return db->get_doclength(get_docid());
 }
 
+Xapian::termcount
+InMemoryPostList::get_nouniqterm() const
+{
+    if (db->is_closed()) InMemoryDatabase::throw_database_closed();
+    return db->get_nouniqterm(get_docid());
+}
+
 PositionList *
 InMemoryPostList::read_position_list()
 {
@@ -323,6 +330,13 @@ InMemoryAllDocsPostList::get_doclength() const
 }
 
 Xapian::termcount
+InMemoryAllDocsPostList::get_nouniqterm() const
+{
+    if (db->is_closed()) InMemoryDatabase::throw_database_closed();
+    return db->get_nouniqterm(did);
+}
+
+Xapian::termcount
 InMemoryAllDocsPostList::get_wdf() const
 {
     return 1;
@@ -528,6 +542,12 @@ InMemoryDatabase::get_doclength(Xapian::docid did) const
     return doclengths[did - 1];
 }
 
+Xapian::termcount
+InMemoryDatabase::get_nouniqterm(Xapian::docid did) const
+{
+   return doclengths[did-1];
+}
+
 TermList *
 InMemoryDatabase::open_term_list(Xapian::docid did) const
 {
diff --git a/xapian-core/backends/inmemory/inmemory_database.h b/xapian-core/backends/inmemory/inmemory_database.h
index 036834d..7106fd3 100644
--- a/xapian-core/backends/inmemory/inmemory_database.h
+++ b/xapian-core/backends/inmemory/inmemory_database.h
@@ -155,6 +155,7 @@ class InMemoryPostList : public LeafPostList {
 
 	Xapian::docid       get_docid() const;     // Gets current docid
 	Xapian::termcount   get_doclength() const; // Length of current document
+	Xapian::termcount   get_nouniqterm() const; // Length of current document
 	Xapian::termcount   get_wdf() const;	   // Within Document Frequency
 	PositionList * read_position_list();
 	PositionList * open_position_list() const;
@@ -184,6 +185,7 @@ class InMemoryAllDocsPostList : public LeafPostList {
 
 	Xapian::docid       get_docid() const;     // Gets current docid
 	Xapian::termcount   get_doclength() const; // Length of current document
+	Xapian::termcount   get_nouniqterm() const; // number of terms in current document
 	Xapian::termcount   get_wdf() const;       // Within Document Frequency
 	PositionList * read_position_list();
 	PositionList * open_position_list() const;
@@ -320,6 +322,7 @@ class InMemoryDatabase : public Xapian::Database::Internal {
     totlen_t get_total_length() const;
     Xapian::doclength get_avlength() const;
     Xapian::termcount get_doclength(Xapian::docid did) const;
+    Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 
     Xapian::doccount get_termfreq(const string & tname) const;
     Xapian::termcount get_collection_freq(const string & tname) const;
diff --git a/xapian-core/backends/multi/multi_postlist.cc b/xapian-core/backends/multi/multi_postlist.cc
index efb11fd..3186734 100644
--- a/xapian-core/backends/multi/multi_postlist.cc
+++ b/xapian-core/backends/multi/multi_postlist.cc
@@ -111,6 +111,17 @@ MultiPostList::get_doclength() const
 }
 
 Xapian::termcount
+MultiPostList::get_nouniqterm() const
+{
+    LOGCALL(DB, Xapian::termcount, "MultiPostList::get_nouniqterm", NO_ARGS);
+    Assert(!at_end());
+    Assert(currdoc != 0);
+    Xapian::termcount result = postlists[(currdoc - 1) % multiplier]->get_nouniqterm();
+    AssertEqParanoid(result, this_db.get_nouniqterm(get_docid()));
+    RETURN(result);
+}
+
+Xapian::termcount
 MultiPostList::get_wdf() const
 {
     return postlists[(currdoc - 1) % multiplier]->get_wdf();
diff --git a/xapian-core/backends/multi/multi_postlist.h b/xapian-core/backends/multi/multi_postlist.h
index 236b56d..13bfdb2 100644
--- a/xapian-core/backends/multi/multi_postlist.h
+++ b/xapian-core/backends/multi/multi_postlist.h
@@ -53,6 +53,7 @@ class MultiPostList : public PostList {
 
 	Xapian::docid  get_docid() const;     // Gets current docid
 	Xapian::termcount get_doclength() const; // Get length of current document
+	Xapian::termcount get_nouniqterm() const; // Get number of unique term in current document
         Xapian::termcount get_wdf() const;	    // Within Document Frequency
 	PositionList * open_position_list() const;
 	PostList *next(double w_min);          // Moves to next docid
diff --git a/xapian-core/backends/remote/net_postlist.cc b/xapian-core/backends/remote/net_postlist.cc
index e8240d6..67e1ee9 100644
--- a/xapian-core/backends/remote/net_postlist.cc
+++ b/xapian-core/backends/remote/net_postlist.cc
@@ -46,6 +46,12 @@ NetworkPostList::get_doclength() const
 }
 
 Xapian::termcount
+NetworkPostList::get_nouniqterm() const
+{
+    return db->get_nouniqterm(lastdocid);
+}
+
+Xapian::termcount
 NetworkPostList::get_wdf() const
 {
     return lastwdf;
diff --git a/xapian-core/backends/remote/net_postlist.h b/xapian-core/backends/remote/net_postlist.h
index 236af22..e42b923 100644
--- a/xapian-core/backends/remote/net_postlist.h
+++ b/xapian-core/backends/remote/net_postlist.h
@@ -75,6 +75,9 @@ class NetworkPostList : public LeafPostList {
 
     /// Get the length of the current document.
     Xapian::termcount get_doclength() const;
+    
+	/// Get the number of terms in document
+    Xapian::termcount get_nouniqterm() const;
 
     /// Get the Within Document Frequency of the term in the current document.
     Xapian::termcount get_wdf() const;
diff --git a/xapian-core/backends/remote/remote-database.cc b/xapian-core/backends/remote/remote-database.cc
index 325d750..aa05a86 100644
--- a/xapian-core/backends/remote/remote-database.cc
+++ b/xapian-core/backends/remote/remote-database.cc
@@ -499,7 +499,21 @@ RemoteDatabase::get_doclength(Xapian::docid did) const
     }
     return doclen;
 }
-
+Xapian::termcount
+RemoteDatabase::get_nouniqterm(Xapian::docid did) const
+{
+    Assert(did != 0);
+    send_message(MSG_DOCLENGTH, encode_length(did));
+    string message;
+    get_message(message, REPLY_DOCLENGTH);
+    const char * p = message.c_str();
+    const char * p_end = p + message.size();
+    Xapian::termcount doclen = decode_length(&p, p_end, false);
+    if (p != p_end) {
+	throw Xapian::NetworkError("Bad REPLY_DOCLENGTH message received", context);
+    }
+    return doclen;
+}
 reply_type
 RemoteDatabase::get_message(string &result, reply_type required_type) const
 {
diff --git a/xapian-core/backends/remote/remote-database.h b/xapian-core/backends/remote/remote-database.h
index cf55776..5b4bc3a 100644
--- a/xapian-core/backends/remote/remote-database.h
+++ b/xapian-core/backends/remote/remote-database.h
@@ -210,6 +210,7 @@ class RemoteDatabase : public Xapian::Database::Internal {
     Xapian::doclength get_avlength() const;
 
     Xapian::termcount get_doclength(Xapian::docid did) const;
+    Xapian::termcount get_nouniqterm(Xapian::docid did) const;
 
     /// Check if term exists.
     bool term_exists(const string & tname) const;
diff --git a/xapian-core/examples/simpleindex.cc b/xapian-core/examples/simpleindex.cc
index b40786c..a3492bb 100644
--- a/xapian-core/examples/simpleindex.cc
+++ b/xapian-core/examples/simpleindex.cc
@@ -48,7 +48,7 @@ try {
     }
 
     // Open the database for update, creating a new database if necessary.
-    Xapian::WritableDatabase db(argv[1], Xapian::DB_CREATE_OR_OPEN);
+    Xapian::WritableDatabase db(Xapian::Brass::open(argv[1], Xapian::DB_CREATE_OR_OPEN));
 
     Xapian::TermGenerator indexer;
     Xapian::Stem stemmer("english");
diff --git a/xapian-core/examples/simplesearch.cc b/xapian-core/examples/simplesearch.cc
index 881161f..2ffe411 100644
--- a/xapian-core/examples/simplesearch.cc
+++ b/xapian-core/examples/simplesearch.cc
@@ -50,7 +50,7 @@ try {
     }
 
     // Open the database for searching.
-    Xapian::Database db(argv[1]);
+    Xapian::Database db(Xapian::Brass::open(argv[1]));
 
     // Start an enquire session.
     Xapian::Enquire enquire(db);
diff --git a/xapian-core/include/xapian/database.h b/xapian-core/include/xapian/database.h
index 31b07da..c366c66 100644
--- a/xapian-core/include/xapian/database.h
+++ b/xapian-core/include/xapian/database.h
@@ -346,6 +346,9 @@ class XAPIAN_VISIBILITY_DEFAULT Database {
 	/// Get the length of a document.
 	Xapian::termcount get_doclength(Xapian::docid did) const;
 
+	/// Get the number of unique term in document
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
+	
 	/** Send a "keep-alive" to remote databases to stop them timing out.
 	 *
 	 *  Has no effect on non-remote databases.
diff --git a/xapian-core/include/xapian/postingiterator.h b/xapian-core/include/xapian/postingiterator.h
index 0c6d24a..4483b33 100644
--- a/xapian-core/include/xapian/postingiterator.h
+++ b/xapian-core/include/xapian/postingiterator.h
@@ -70,6 +70,9 @@ class XAPIAN_VISIBILITY_DEFAULT PostingIterator {
     /// Return the length of the document at the current position.
     Xapian::termcount get_doclength() const;
 
+	/// Return the number of unique term in the current document.
+	Xapian::termcount get_nouniqterm() const;
+
 #if 0 // FIXME: TermIterator supports this, so PostingIterator really ought to.
     /// Return the length of the position list for the current position.
     Xapian::termcount positionlist_count() const;
diff --git a/xapian-core/include/xapian/weight.h b/xapian-core/include/xapian/weight.h
index c85a8af..9f64c0c 100644
--- a/xapian-core/include/xapian/weight.h
+++ b/xapian-core/include/xapian/weight.h
@@ -194,6 +194,18 @@ public:
     virtual double get_sumpart(Xapian::termcount wdf,
 			       Xapian::termcount doclen) const = 0;
 
+    /** Calculate the weight contribution for this object's term to a document.
+     *
+     *  The parameters give information about the document which may be used
+     *  in the calculations have an additional parameter for number of uniq terms:
+     *
+     *  @param wdf    The within document frequency of the term in the document.
+     *  @param doclen The document's length (unnormalised).
+	 *  @param nouniqterm Number of Unique terms in the Document(Used for absolute smoothing.
+     */
+    virtual double get_sumpart(Xapian::termcount wdf,
+			       Xapian::termcount doclen,Xapian::termcount uniqterm) const = 0;
+
     /** Return an upper bound on what get_sumpart() can return for any document.
      *
      *  This information is used by the matcher to perform various
@@ -352,6 +364,8 @@ class XAPIAN_VISIBILITY_DEFAULT BoolWeight : public Weight {
     BoolWeight * unserialise(const std::string & s) const;
 
     double get_sumpart(Xapian::termcount wdf,
+		       Xapian::termcount doclen,Xapian::termcount uniqterm) const;
+    double get_sumpart(Xapian::termcount wdf,
 		       Xapian::termcount doclen) const;
     double get_maxpart() const;
 
@@ -456,6 +470,8 @@ class XAPIAN_VISIBILITY_DEFAULT BM25Weight : public Weight {
     BM25Weight * unserialise(const std::string & s) const;
 
     double get_sumpart(Xapian::termcount wdf,
+		       Xapian::termcount doclen,Xapian::termcount uniqterm) const;
+    double get_sumpart(Xapian::termcount wdf,
 		       Xapian::termcount doclen) const;
     double get_maxpart() const;
 
@@ -516,6 +532,8 @@ class XAPIAN_VISIBILITY_DEFAULT TradWeight : public Weight {
     TradWeight * unserialise(const std::string & s) const;
 
     double get_sumpart(Xapian::termcount wdf,
+		       Xapian::termcount doclen,Xapian::termcount uniqterm) const;
+    double get_sumpart(Xapian::termcount wdf,
     Xapian::termcount doclen) const;
     double get_maxpart() const;
 
@@ -666,6 +684,9 @@ class XAPIAN_VISIBILITY_DEFAULT UnigramLMWeight : public Weight {
 
     double get_sumpart(Xapian::termcount wdf,
 		       Xapian::termcount doclen) const;
+	
+    double get_sumpart(Xapian::termcount wdf,
+		       Xapian::termcount doclen,Xapian::termcount uniqterm) const;
     double get_maxpart() const;
 
     double get_sumextra(Xapian::termcount doclen) const;
diff --git a/xapian-core/matcher/andmaybepostlist.cc b/xapian-core/matcher/andmaybepostlist.cc
index 0467e6c..1cb5980 100644
--- a/xapian-core/matcher/andmaybepostlist.cc
+++ b/xapian-core/matcher/andmaybepostlist.cc
@@ -205,6 +205,15 @@ AndMaybePostList::get_doclength() const
 }
 
 Xapian::termcount
+AndMaybePostList::get_nouniqterm() const
+{
+    LOGCALL(MATCH, Xapian::termcount, "AndMaybePostList::get_nouniqterm", NO_ARGS);
+    Assert(lhead != 0); // check we've started
+    if (lhead == rhead) AssertEq(l->get_nouniqterm(), r->get_nouniqterm());
+    RETURN(l->get_nouniqterm());
+}
+
+Xapian::termcount
 AndMaybePostList::get_wdf() const
 {
     LOGCALL(MATCH, Xapian::termcount, "AndMaybePostList::get_wdf", NO_ARGS);
diff --git a/xapian-core/matcher/andmaybepostlist.h b/xapian-core/matcher/andmaybepostlist.h
index d3bbfaf..f19fd4c 100644
--- a/xapian-core/matcher/andmaybepostlist.h
+++ b/xapian-core/matcher/andmaybepostlist.h
@@ -82,6 +82,8 @@ class AndMaybePostList : public BranchPostList {
 	 *  comes from.
 	 */
 	virtual Xapian::termcount get_doclength() const;
+	
+	virtual Xapian::termcount get_nouniqterm() const;
 
         AndMaybePostList(PostList *left_,
 			 PostList *right_,
diff --git a/xapian-core/matcher/andnotpostlist.cc b/xapian-core/matcher/andnotpostlist.cc
index 1853aa9..3112804 100644
--- a/xapian-core/matcher/andnotpostlist.cc
+++ b/xapian-core/matcher/andnotpostlist.cc
@@ -211,6 +211,13 @@ AndNotPostList::get_doclength() const
 }
 
 Xapian::termcount
+AndNotPostList::get_nouniqterm() const
+{    
+	LOGCALL(MATCH, Xapian::termcount, "AndNotPostList::get_nouniqterm", NO_ARGS);
+    RETURN(l->get_nouniqterm());
+}
+
+Xapian::termcount
 AndNotPostList::get_wdf() const
 {
     LOGCALL(MATCH, Xapian::termcount, "AndNotPostList::get_wdf", NO_ARGS);
diff --git a/xapian-core/matcher/andnotpostlist.h b/xapian-core/matcher/andnotpostlist.h
index b8ddb10..a54acd1 100644
--- a/xapian-core/matcher/andnotpostlist.h
+++ b/xapian-core/matcher/andnotpostlist.h
@@ -63,6 +63,8 @@ class AndNotPostList : public BranchPostList {
 	 *  comes from.
 	 */
 	virtual Xapian::termcount get_doclength() const;
+	
+	virtual Xapian::termcount get_nouniqterm() const;
 
         AndNotPostList(PostList *left,
 		       PostList *right,
diff --git a/xapian-core/matcher/const_database_wrapper.cc b/xapian-core/matcher/const_database_wrapper.cc
index ac1b691..60b1fd9 100644
--- a/xapian-core/matcher/const_database_wrapper.cc
+++ b/xapian-core/matcher/const_database_wrapper.cc
@@ -71,6 +71,12 @@ ConstDatabaseWrapper::get_doclength(Xapian::docid did) const
     return realdb->get_doclength(did);
 }
 
+Xapian::termcount
+ConstDatabaseWrapper::get_nouniqterm(Xapian::docid did) const
+{
+	return realdb->get_nouniqterm(did);
+}
+
 Xapian::doccount
 ConstDatabaseWrapper::get_termfreq(const string & tname) const
 {
diff --git a/xapian-core/matcher/const_database_wrapper.h b/xapian-core/matcher/const_database_wrapper.h
index 8160c45..f0f1128 100644
--- a/xapian-core/matcher/const_database_wrapper.h
+++ b/xapian-core/matcher/const_database_wrapper.h
@@ -53,6 +53,7 @@ class ConstDatabaseWrapper : public Xapian::Database::Internal {
     totlen_t get_total_length() const;
     Xapian::doclength get_avlength() const;
     Xapian::termcount get_doclength(Xapian::docid did) const;
+	Xapian::termcount get_nouniqterm(Xapian::docid did) const;
     Xapian::doccount get_termfreq(const string & tname) const;
     Xapian::termcount get_collection_freq(const string & tname) const;
     Xapian::doccount get_value_freq(Xapian::valueno slot) const;
diff --git a/xapian-core/matcher/externalpostlist.cc b/xapian-core/matcher/externalpostlist.cc
index 053c91a..3f1ae16 100644
--- a/xapian-core/matcher/externalpostlist.cc
+++ b/xapian-core/matcher/externalpostlist.cc
@@ -108,6 +108,13 @@ ExternalPostList::get_doclength() const
     return 0;
 }
 
+Xapian::termcount
+ExternalPostList::get_nouniqterm() const
+{
+	Assert(false);
+	return 0;
+}
+
 double
 ExternalPostList::recalc_maxweight()
 {
diff --git a/xapian-core/matcher/externalpostlist.h b/xapian-core/matcher/externalpostlist.h
index ee97aca..81b7f3b 100644
--- a/xapian-core/matcher/externalpostlist.h
+++ b/xapian-core/matcher/externalpostlist.h
@@ -71,6 +71,8 @@ class ExternalPostList : public PostList {
     double get_weight() const;
 
     Xapian::termcount get_doclength() const;
+	
+	Xapian::termcount get_nouniqterm() const;
 
     double recalc_maxweight();
 
diff --git a/xapian-core/matcher/extraweightpostlist.h b/xapian-core/matcher/extraweightpostlist.h
index 55e7bfa..ccd6897 100644
--- a/xapian-core/matcher/extraweightpostlist.h
+++ b/xapian-core/matcher/extraweightpostlist.h
@@ -95,6 +95,10 @@ class ExtraWeightPostList : public PostList {
 	virtual Xapian::termcount get_doclength() const {
 	    return pl->get_doclength();
 	}
+	
+	virtual Xapian::termcount get_nouniqterm() const {
+	    return pl->get_nouniqterm();
+	}
 
 	ExtraWeightPostList(PostList * pl_, Xapian::Weight *wt_,
 			    MultiMatch *matcher_)
diff --git a/xapian-core/matcher/mergepostlist.cc b/xapian-core/matcher/mergepostlist.cc
index b32f632..91c0a1d 100644
--- a/xapian-core/matcher/mergepostlist.cc
+++ b/xapian-core/matcher/mergepostlist.cc
@@ -223,6 +223,15 @@ MergePostList::get_doclength() const
 }
 
 Xapian::termcount
+MergePostList::get_nouniqterm() const
+{
+	LOGCALL(MATCH,Xapian::termcount,"MergePostList::get_nouniqterm",NO_ARGS);
+	Assert(current != -1);
+	return plists[current]->get_nouniqterm();
+}
+
+
+Xapian::termcount
 MergePostList::count_matching_subqs() const
 {
     LOGCALL(MATCH, Xapian::termcount, "MergePostList::count_matching_subqs", NO_ARGS);
diff --git a/xapian-core/matcher/mergepostlist.h b/xapian-core/matcher/mergepostlist.h
index f222fa2..7f76c85 100644
--- a/xapian-core/matcher/mergepostlist.h
+++ b/xapian-core/matcher/mergepostlist.h
@@ -84,6 +84,9 @@ class MergePostList : public PostList {
 	 *  comes from.
 	 */
 	virtual Xapian::termcount get_doclength() const;
+	
+	/** Return the no of uniqterm in the document */
+	virtual Xapian::termcount get_nouniqterm() const;
 
 	Xapian::termcount count_matching_subqs() const;
 
diff --git a/xapian-core/matcher/msetpostlist.cc b/xapian-core/matcher/msetpostlist.cc
index 52608a1..0b4ac00 100644
--- a/xapian-core/matcher/msetpostlist.cc
+++ b/xapian-core/matcher/msetpostlist.cc
@@ -96,6 +96,12 @@ MSetPostList::get_doclength() const
     throw Xapian::UnimplementedError("MSetPostList::get_doclength() unimplemented");
 }
 
+Xapian::termcount
+MSetPostList::get_nouniqterm() const
+{
+    throw Xapian::UnimplementedError("MSetPostList::get_doclength() unimplemented");
+}
+
 double
 MSetPostList::recalc_maxweight()
 {
diff --git a/xapian-core/matcher/msetpostlist.h b/xapian-core/matcher/msetpostlist.h
index 7b4f297..d9ed397 100644
--- a/xapian-core/matcher/msetpostlist.h
+++ b/xapian-core/matcher/msetpostlist.h
@@ -72,6 +72,8 @@ class MSetPostList : public PostList {
 
     /// Not implemented for MSetPostList.
     Xapian::termcount get_doclength() const;
+	
+	Xapian::termcount get_nouniqterm() const;
 
     double recalc_maxweight();
 
diff --git a/xapian-core/matcher/multiandpostlist.cc b/xapian-core/matcher/multiandpostlist.cc
index df02ddd..9e19bd3 100644
--- a/xapian-core/matcher/multiandpostlist.cc
+++ b/xapian-core/matcher/multiandpostlist.cc
@@ -159,6 +159,17 @@ MultiAndPostList::get_doclength() const
     return doclength;
 }
 
+Xapian::termcount
+MultiAndPostList::get_nouniqterm() const
+{
+	Assert(did);
+	Xapian::termcount nouniqterm = plist[0]->get_nouniqterm();
+	for(size_t i = 1;i < n_kids; ++i) {
+	AssertEq(nouniqterm,plist[i]->get_nouniqterm());
+	}
+	return nouniqterm;
+}
+
 double
 MultiAndPostList::get_weight() const
 {
diff --git a/xapian-core/matcher/multiandpostlist.h b/xapian-core/matcher/multiandpostlist.h
index 8913a1a..cfd4ca2 100644
--- a/xapian-core/matcher/multiandpostlist.h
+++ b/xapian-core/matcher/multiandpostlist.h
@@ -173,6 +173,8 @@ class MultiAndPostList : public PostList {
     Xapian::docid get_docid() const;
 
     Xapian::termcount get_doclength() const;
+	
+	Xapian::termcount get_nouniqterm() const;
 
     double get_weight() const;
 
diff --git a/xapian-core/matcher/multixorpostlist.cc b/xapian-core/matcher/multixorpostlist.cc
index 8d0abd5..2496382 100644
--- a/xapian-core/matcher/multixorpostlist.cc
+++ b/xapian-core/matcher/multixorpostlist.cc
@@ -162,6 +162,26 @@ MultiXorPostList::get_doclength() const
     return doclength;
 }
 
+Xapian::termcount
+MultiXorPostList::get_nouniqterm() const
+{
+	Assert(did);
+	Xapian::termcount nouniqterm = 0;
+	bool nouniqterm_set = false;
+	for (size_t i = 0; i < n_kids;++i) {
+	if (plist[i]->get_nouniqterm() == did) {
+		if(nouniqterm_set) {
+		AssertEq(nouniqterm,plist[i]->get_nouniqterm());
+		} else {
+		nouniqterm = plist[i]->get_nouniqterm();
+		nouniqterm_set = true;	
+		}
+	}
+	}
+	Assert(nouniqterm_set);
+	return nouniqterm;
+}
+
 double
 MultiXorPostList::get_weight() const
 {
diff --git a/xapian-core/matcher/multixorpostlist.h b/xapian-core/matcher/multixorpostlist.h
index ce0bf8c..922c4ce 100644
--- a/xapian-core/matcher/multixorpostlist.h
+++ b/xapian-core/matcher/multixorpostlist.h
@@ -94,6 +94,8 @@ class MultiXorPostList : public PostList {
     Xapian::docid get_docid() const;
 
     Xapian::termcount get_doclength() const;
+	
+	Xapian::termcount get_nouniqterm() const;
 
     double get_weight() const;
 
diff --git a/xapian-core/matcher/orpostlist.cc b/xapian-core/matcher/orpostlist.cc
index a3c52d1..33b67f5 100644
--- a/xapian-core/matcher/orpostlist.cc
+++ b/xapian-core/matcher/orpostlist.cc
@@ -405,6 +405,27 @@ OrPostList::get_doclength() const
 }
 
 Xapian::termcount
+OrPostList::get_nouniqterm() const
+{
+    LOGCALL(MATCH, Xapian::termcount, "OrPostList::get_nouniqterm", NO_ARGS);
+    Xapian::termcount nouniqterm;
+
+    Assert(lhead != 0 && rhead != 0); // check we've started
+    if (lhead > rhead) {
+	nouniqterm = r->get_nouniqterm();
+	LOGLINE(MATCH, "OrPostList::get_nouniqterm() [right docid=" << rhead <<
+		       "] = " << nouniqterm);
+    } else {
+	nouniqterm = l->get_nouniqterm();
+	LOGLINE(MATCH, "OrPostList::get_nouniqterm() [left docid=" << lhead <<
+	       	       "] = " << nouniqterm);
+    }
+
+    RETURN(nouniqterm);
+}
+
+
+Xapian::termcount
 OrPostList::get_wdf() const
 {
     LOGCALL(MATCH, Xapian::termcount, "OrPostList::get_wdf", NO_ARGS);
diff --git a/xapian-core/matcher/orpostlist.h b/xapian-core/matcher/orpostlist.h
index 5798b9f..50e86b1 100644
--- a/xapian-core/matcher/orpostlist.h
+++ b/xapian-core/matcher/orpostlist.h
@@ -70,6 +70,10 @@ class OrPostList : public BranchPostList {
 	 */
 	virtual Xapian::termcount get_doclength() const;
 
+	/// Return the no of uniq term of the document
+
+	virtual Xapian::termcount get_nouniqterm() const;
+
         OrPostList(PostList * left_,
 		   PostList * right_,
 		   MultiMatch * matcher_,
diff --git a/xapian-core/matcher/selectpostlist.h b/xapian-core/matcher/selectpostlist.h
index 41151f9..106afd1 100644
--- a/xapian-core/matcher/selectpostlist.h
+++ b/xapian-core/matcher/selectpostlist.h
@@ -53,6 +53,7 @@ class SelectPostList : public PostList {
 	Xapian::docid get_docid() const { return source->get_docid(); }
 	double get_weight() const { return source->get_weight(); }
 	Xapian::termcount get_doclength() const { return source->get_doclength(); }
+	Xapian::termcount get_nouniqterm() const { return source->get_nouniqterm(); }
 	double recalc_maxweight() { return source->recalc_maxweight(); }
 	PositionList * read_position_list() { return source->read_position_list(); }
 	PositionList * open_position_list() const { return source->open_position_list(); }
diff --git a/xapian-core/matcher/synonympostlist.cc b/xapian-core/matcher/synonympostlist.cc
index 832846f..df0d8a3 100644
--- a/xapian-core/matcher/synonympostlist.cc
+++ b/xapian-core/matcher/synonympostlist.cc
@@ -76,13 +76,14 @@ SynonymPostList::get_weight() const
     // that this is true.  Note that this requires the doclength to be
     // calculated even if the weight object doesn't want it.
 
+	Xapian::termcount uniqterm = get_nouniqterm();
     if (want_wdf) {
 	Xapian::termcount wdf = get_wdf();
 	Xapian::termcount doclen = get_doclength();
 	if (wdf > doclen) wdf = doclen;
-	RETURN(wt->get_sumpart(wdf, doclen));
+	RETURN(wt->get_sumpart(wdf, doclen,uniqterm));
     }
-    RETURN(wt->get_sumpart(0, want_doclength ? get_doclength() : 0));
+    RETURN(wt->get_sumpart(0, want_doclength ? get_doclength() : 0,uniqterm));
 }
 
 double
@@ -142,6 +143,12 @@ SynonymPostList::get_doclength() const {
     RETURN(subtree->get_doclength());
 }
 
+Xapian::termcount
+SynonymPostList::get_nouniqterm() const {
+	LOGCALL(MATCH,Xapian::termcount,"SynonymPostList::get_nouniqterm",NO_ARGS);
+	RETURN(subtree->get_nouniqterm());
+}
+
 bool
 SynonymPostList::at_end() const {
     LOGCALL(MATCH, bool, "SynonymPostList::at_end", NO_ARGS);
diff --git a/xapian-core/matcher/synonympostlist.h b/xapian-core/matcher/synonympostlist.h
index 0b4adfb..f65bb20 100644
--- a/xapian-core/matcher/synonympostlist.h
+++ b/xapian-core/matcher/synonympostlist.h
@@ -88,6 +88,7 @@ class SynonymPostList : public PostList {
     // to an OR.
     Xapian::docid get_docid() const;
     Xapian::termcount get_doclength() const;
+	Xapian::termcount get_nouniqterm() const;
     bool at_end() const;
 
     Xapian::termcount count_matching_subqs() const;
diff --git a/xapian-core/matcher/valuerangepostlist.cc b/xapian-core/matcher/valuerangepostlist.cc
index 0300daf..974ecd9 100644
--- a/xapian-core/matcher/valuerangepostlist.cc
+++ b/xapian-core/matcher/valuerangepostlist.cc
@@ -95,6 +95,13 @@ ValueRangePostList::get_doclength() const
     return 0;
 }
 
+Xapian::termcount
+ValueRangePostList::get_nouniqterm() const
+{
+	Assert(db);
+	return 0;
+}
+
 double
 ValueRangePostList::recalc_maxweight()
 {
diff --git a/xapian-core/matcher/valuerangepostlist.h b/xapian-core/matcher/valuerangepostlist.h
index 37c7027..7afd40b 100644
--- a/xapian-core/matcher/valuerangepostlist.h
+++ b/xapian-core/matcher/valuerangepostlist.h
@@ -71,6 +71,8 @@ class ValueRangePostList : public PostList {
 
     Xapian::termcount get_doclength() const;
 
+	Xapian::termcount get_nouniqterm() const;
+
     double recalc_maxweight();
 
     PositionList * read_position_list();
diff --git a/xapian-core/weight/bm25weight.cc b/xapian-core/weight/bm25weight.cc
index f492932..f6f3233 100644
--- a/xapian-core/weight/bm25weight.cc
+++ b/xapian-core/weight/bm25weight.cc
@@ -160,6 +160,11 @@ BM25Weight::unserialise(const string & s) const
 }
 
 double
+BM25Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,Xapian::termcount) const
+{
+	get_sumpart(wdf,len);
+}
+double
 BM25Weight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const
 {
     LOGCALL(WTCALC, double, "BM25Weight::get_sumpart", wdf | len);
diff --git a/xapian-core/weight/boolweight.cc b/xapian-core/weight/boolweight.cc
index 3c194ae..e599d39 100644
--- a/xapian-core/weight/boolweight.cc
+++ b/xapian-core/weight/boolweight.cc
@@ -58,6 +58,12 @@ BoolWeight::unserialise(const string &) const
 }
 
 double
+BoolWeight::get_sumpart(Xapian::termcount, Xapian::termcount,Xapian::termcount) const
+{
+	return 0;
+}
+
+double
 BoolWeight::get_sumpart(Xapian::termcount, Xapian::termcount) const
 {
     return 0;
diff --git a/xapian-core/weight/tradweight.cc b/xapian-core/weight/tradweight.cc
index 83f31b5..c31397e 100644
--- a/xapian-core/weight/tradweight.cc
+++ b/xapian-core/weight/tradweight.cc
@@ -140,6 +140,12 @@ TradWeight::unserialise(const string & s) const
 }
 
 double
+TradWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,Xapian::termcount) const
+{
+	get_sumpart(wdf,len);
+}
+
+double
 TradWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const
 {
     double wdf_double(wdf);
diff --git a/xapian-core/weight/unigramlmweight.cc b/xapian-core/weight/unigramlmweight.cc
index a9fd7e8..da64413 100644
--- a/xapian-core/weight/unigramlmweight.cc
+++ b/xapian-core/weight/unigramlmweight.cc
@@ -118,10 +118,17 @@ UnigramLMWeight::unserialise(const string & s) const
 double
 UnigramLMWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const
 {
+	get_sumpart(wdf,len,Xapian::termcount(1));
+}
+
+double
+UnigramLMWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len,Xapian::termcount uniqterm) const
+{
     //Withing Document Frequency of the term in document being considered.
     double wdf_double(wdf);
     //Length of the Document in terms of number of terms.
     double len_double(len);
+	double nouniqterm_double(uniqterm);
     // varioable to store weight contribution of term in the document socring for unigram LM.
     double weight_collection,weight_document,weight_sum;
 	/* In case the within document frequency of term is zero smoothining
@@ -140,7 +147,7 @@ UnigramLMWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const
 		weight_sum = (wdf_double + (param_smoothing1*weight_collection))/(len_double + param_smoothing1);
 	}
 	else if(select_smoothing ==  ABSOLUTE_DISCOUNT_SMOOTHING) {
-		weight_sum = ((((wdf_double - param_smoothing1) > 0) ? (wdf_double - param_smoothing1) : 0) / len_double) + ((param_smoothing1 *weight_collection*(len_double-20))/len_double);
+		weight_sum = ((((wdf_double - param_smoothing1) > 0) ? (wdf_double - param_smoothing1) : 0) / len_double) + ((param_smoothing1 *weight_collection*(nouniqterm_double))/len_double);
 	}
 	else {
 		weight_sum = (((1-param_smoothing1)*(wdf_double + (param_smoothing2*weight_collection))/(len_double + param_smoothing2)) + (param_smoothing1*weight_collection));
@@ -152,9 +159,9 @@ UnigramLMWeight::get_sumpart(Xapian::termcount wdf, Xapian::termcount len) const
 	* to calculate the product since (sum of log is log of product and 
 	* since aim is ranking ranking document by product or log of 
 	* product wont make large diffrence hence log(product) will be used for ranking */
-	//weight_sum = weight_sum +1;
-	return (log((weight_sum)*param_log) > 0) ? log((weight_sum)*param_log) : 0;
-	//return weight_sum;
+	weight_sum = weight_sum +1;
+	//return (log((weight_sum)*param_log) > 0) ? log((weight_sum)*param_log) : 0;
+	return nouniqterm_double;
 }
 
 double
